/**
 * This class is generated by jOOQ
 */
package webdoctor.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;

import webdoctor.jooq.Webdoctor;
import webdoctor.jooq.tables.records.UserFavouritearticleRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserFavouritearticle extends TableImpl<UserFavouritearticleRecord> {

    private static final long serialVersionUID = -693258467;

    /**
     * The reference instance of <code>webdoctor.user_favouritearticle</code>
     */
    public static final UserFavouritearticle USER_FAVOURITEARTICLE = new UserFavouritearticle();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserFavouritearticleRecord> getRecordType() {
        return UserFavouritearticleRecord.class;
    }

    /**
     * The column <code>webdoctor.user_favouritearticle.user_id</code>.
     */
    public final TableField<UserFavouritearticleRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>webdoctor.user_favouritearticle.article_id</code>.
     */
    public final TableField<UserFavouritearticleRecord, Integer> ARTICLE_ID = createField("article_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>webdoctor.user_favouritearticle</code> table reference
     */
    public UserFavouritearticle() {
        this("user_favouritearticle", null);
    }

    /**
     * Create an aliased <code>webdoctor.user_favouritearticle</code> table reference
     */
    public UserFavouritearticle(String alias) {
        this(alias, USER_FAVOURITEARTICLE);
    }

    private UserFavouritearticle(String alias, Table<UserFavouritearticleRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserFavouritearticle(String alias, Table<UserFavouritearticleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Webdoctor.WEBDOCTOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserFavouritearticle as(String alias) {
        return new UserFavouritearticle(alias, this);
    }

    /**
     * Rename this table
     */
    public UserFavouritearticle rename(String name) {
        return new UserFavouritearticle(name, null);
    }
}
