/**
 * This class is generated by jOOQ
 */
package webdoctor.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;

import webdoctor.jooq.tables.Comment;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record5<Integer, UInteger, UInteger, Timestamp, String> {

    private static final long serialVersionUID = 218485235;

    /**
     * Setter for <code>webdoctor.comment.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>webdoctor.comment.id</code>.
     */
    @NotNull
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>webdoctor.comment.user_id</code>.
     */
    public void setUserId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>webdoctor.comment.user_id</code>.
     */
    public UInteger getUserId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>webdoctor.comment.article_id</code>.
     */
    public void setArticleId(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>webdoctor.comment.article_id</code>.
     */
    public UInteger getArticleId() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>webdoctor.comment.time_stamp</code>.
     */
    public void setTimeStamp(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>webdoctor.comment.time_stamp</code>.
     */
    public Timestamp getTimeStamp() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>webdoctor.comment.content</code>.
     */
    public void setContent(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>webdoctor.comment.content</code>.
     */
    @Size(max = 65535)
    public String getContent() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, UInteger, UInteger, Timestamp, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, UInteger, UInteger, Timestamp, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Comment.COMMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Comment.COMMENT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field3() {
        return Comment.COMMENT.ARTICLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Comment.COMMENT.TIME_STAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Comment.COMMENT.CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value3() {
        return getArticleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getTimeStamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value2(UInteger value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value3(UInteger value) {
        setArticleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value4(Timestamp value) {
        setTimeStamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value5(String value) {
        setContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord values(Integer value1, UInteger value2, UInteger value3, Timestamp value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Integer id, UInteger userId, UInteger articleId, Timestamp timeStamp, String content) {
        super(Comment.COMMENT);

        set(0, id);
        set(1, userId);
        set(2, articleId);
        set(3, timeStamp);
        set(4, content);
    }
}
